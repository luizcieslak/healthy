0 info it worked if it ends with ok
1 verbose cli [ 'D:\\Programs\\node-js\\node.exe',
1 verbose cli   'D:\\Programs\\node-js\\node_modules\\npm\\bin\\npm-cli.js',
1 verbose cli   'install',
1 verbose cli   'git-core' ]
2 info using npm@2.14.4
3 info using node@v4.1.1
4 verbose install initial load of C:\Users\Luiz Fernando\Google Drive\maromba\package.json
5 warn package.json maromba@1.0.0 No repository field.
6 warn package.json maromba@1.0.0 No license field.
7 verbose readDependencies loading dependencies from C:\Users\Luiz Fernando\Google Drive\maromba\package.json
8 silly cache add args [ 'git-core', null ]
9 verbose cache add spec git-core
10 silly cache add parsed spec Result {
10 silly cache add   raw: 'git-core',
10 silly cache add   scope: null,
10 silly cache add   name: 'git-core',
10 silly cache add   rawSpec: '',
10 silly cache add   spec: '*',
10 silly cache add   type: 'range' }
11 silly addNamed git-core@*
12 verbose addNamed "*" is a valid semver range for git-core
13 silly addNameRange { name: 'git-core', range: '*', hasData: false }
14 silly mapToRegistry name git-core
15 silly mapToRegistry using default registry
16 silly mapToRegistry registry https://registry.npmjs.org/
17 silly mapToRegistry uri https://registry.npmjs.org/git-core
18 verbose addNameRange registry:https://registry.npmjs.org/git-core not in flight; fetching
19 verbose request uri https://registry.npmjs.org/git-core
20 verbose request no auth needed
21 info attempt registry request try #1 at 4:00:37 PM
22 verbose request id b17c737a47d3e6ca
23 http request GET https://registry.npmjs.org/git-core
24 http 200 https://registry.npmjs.org/git-core
25 silly get cb [ 200,
25 silly get   { server: 'CouchDB/1.5.0 (Erlang OTP/R16B03)',
25 silly get     etag: '"9BNYQNCNK6XX4EC3S7T3Q4V28"',
25 silly get     'content-type': 'application/json',
25 silly get     'cache-control': 'max-age=60',
25 silly get     'content-length': '21383',
25 silly get     'accept-ranges': 'bytes',
25 silly get     date: 'Sun, 08 Nov 2015 21:00:39 GMT',
25 silly get     via: '1.1 varnish',
25 silly get     age: '0',
25 silly get     connection: 'keep-alive',
25 silly get     'x-served-by': 'cache-jfk1032-JFK',
25 silly get     'x-cache': 'MISS',
25 silly get     'x-cache-hits': '0',
25 silly get     'x-timer': 'S1447016439.374936,VS0,VE465',
25 silly get     vary: 'Accept' } ]
26 verbose get saving git-core to C:\Users\Luiz Fernando\AppData\Roaming\npm-cache\registry.npmjs.org\git-core\.cache.json
27 silly addNameRange number 2 { name: 'git-core', range: '*', hasData: true }
28 silly addNameRange versions [ 'git-core', [ '0.0.1', '0.0.2', '0.0.3', '0.0.4' ] ]
29 silly addNamed git-core@0.0.4
30 verbose addNamed "0.0.4" is a plain semver version for git-core
31 silly mapToRegistry name git-core
32 silly mapToRegistry using default registry
33 silly mapToRegistry registry https://registry.npmjs.org/
34 silly mapToRegistry uri https://registry.npmjs.org/git-core
35 verbose addRemoteTarball https://registry.npmjs.org/git-core/-/git-core-0.0.4.tgz not in flight; adding
36 verbose addRemoteTarball [ 'https://registry.npmjs.org/git-core/-/git-core-0.0.4.tgz',
36 verbose addRemoteTarball   'ee49c4b8c67926e7c4ee13482c06c8bfa94b2261' ]
37 info retry fetch attempt 1 at 4:00:37 PM
38 info attempt registry request try #1 at 4:00:37 PM
39 http fetch GET https://registry.npmjs.org/git-core/-/git-core-0.0.4.tgz
40 http fetch 200 https://registry.npmjs.org/git-core/-/git-core-0.0.4.tgz
41 silly fetchAndShaCheck shasum ee49c4b8c67926e7c4ee13482c06c8bfa94b2261
42 verbose addTmpTarball C:\Users\LUIZFE~1\AppData\Local\Temp\npm-10556-59ef826c\registry.npmjs.org\git-core\-\git-core-0.0.4.tgz not in flight; adding
43 verbose addTmpTarball already have metadata; skipping unpack for git-core@0.0.4
44 silly cache afterAdd git-core@0.0.4
45 verbose afterAdd C:\Users\Luiz Fernando\AppData\Roaming\npm-cache\git-core\0.0.4\package\package.json not in flight; writing
46 verbose afterAdd C:\Users\Luiz Fernando\AppData\Roaming\npm-cache\git-core\0.0.4\package\package.json written
47 silly install resolved [ { name: 'git-core',
47 silly install resolved     version: '0.0.4',
47 silly install resolved     description: 'Simple library for working git core structures(blobs, trees, commits, tags and packs) without a repository',
47 silly install resolved     main: './src/js/index.js',
47 silly install resolved     scripts: { test: 'make test', install: 'node-gyp rebuild' },
47 silly install resolved     repository:
47 silly install resolved      { type: 'git',
47 silly install resolved        url: 'git://github.com/tarruda/node-git-core.git' },
47 silly install resolved     keywords: [ 'git', 'git-objects' ],
47 silly install resolved     devDependencies:
47 silly install resolved      { 'node-gyp': '*',
47 silly install resolved        wrench: '*',
47 silly install resolved        less: '*',
47 silly install resolved        mocha: '*',
47 silly install resolved        chai: '*',
47 silly install resolved        temp: '*',
47 silly install resolved        glob: '*' },
47 silly install resolved     author: { name: 'Thiago de Arruda' },
47 silly install resolved     license: 'BSD',
47 silly install resolved     gypfile: true,
47 silly install resolved     readme: '### node-git-core\n\nLibrary that provides simple object-oriented api for working with git data at a\nlower level, see [git internals](http://git-scm.com/book/en/Git-Internals) for more info:\n\n#### Installation\n```sh\nnpm install git-core\n```\n\n#### Usage\n\n```js\ngit = require(\'git-core\');\nBlob = git.Blob;\nTree = git.Tree;\nCommit = git.Commit;\nTag = git.Tag;\nPack = git.Pack;\n\nb1 = new Blob(\'Some file\');\n\nb2 = new Blob(new Buffer([1,2,3,4,5])); // blob with binary data\n\nb3 = new Blob(\'Another file\\n\');\n\n// (For now file modes are not supported on trees, all blobs have mode 100644 and\n// subtrees have mode 040000)\n\nt1 = new Tree({\n  \'file-under-tree\': b3\n});\n\nt2 = new Tree({\n  \'some-file.txt\': b2,\n  \'some-file2.txt\': b1,\n  \'sub-directory.d\': t1\n});\n\nt3 = new Tree({\n  \'another-file.txt\': b1\n});\n\n// Lets create some commmits\n\nc1 = new Commit({\n  tree: t1,\n  author: {\n    name: \'Git Author\',\n    email: \'author@git.com\',\n    date: d1\n  },\n  message: \'Artificial commit 1\'\n});\n\nc2 = new Commit({\n  tree: t2,\n  author: {\n    name: \'Git Author\',\n    email: \'author@git.com\',\n    date: d2\n  },\n  message: \'Artificial commit 2\',\n  parents: [c1]\n});\n\nc3 = new Commit({\n  tree: t3,\n  author: {\n    name: \'Git User\',\n    email: \'user@domain.com\',\n    date: d3\n  },\n  committer: {\n    name: \'Git Commiter\',\n    email: \'committer@git.com\',\n    date: d4\n  },\n  message: \'Artificial commit 3\',\n  parents: [c2]\n});\n\ntag = new Tag({\n  object: c2,\n  name: \'v0.0.1\',\n  tagger: {\n    name: \'Git Tagger\',\n    email: \'tagger@git.com\'\n  },\n  date: d2,\n  message: \'Tag second commit\'\n});\n\n// Lets pack everything toguether\n\npack = new Pack([c3, tag]);\nserializedPack = pack.serialize(); // this is a git packfile\n\n// We only need to add a head to the pack, all other will be added\n// automatically when serializing\n```\n\nThis library is all about working with git data in-memory, no repositories are\nneeded. Above is an example\non how git objects can be created, connected and serialized, the inverse\nis also supported:\n\n```js\n// Lets say \'buffer\' contains a packfile data that you read from disk or\n// received from \'git-fetch-pack\'\n\npack = Pack.deserialize(buffer);\n\n// pack now contains a ready-to-use git object graph\n\n// print all blobs in the pack\nfor (var i = 0;i < pack.objects.length;i++) {\n  var obj = pack.objects[i];\n  if (obj instanceof Blob) {\n    console.log(obj.serialize().getHash(), \':\', obj.contents.toString()));\n  }\n}\n\n// deserialization of \'thin packs\' is also supported, you just have to pass a\n// callback as a second argument to \'deserialize\', which will be called with\n// the sha1 id whenever a base object is required\n\npack = Pack.deserialize(buffer, function(baseSha1) {\n  // fetch the object with \'baseSha1\' id from somewhere and return\n});\n```\n\nDelta compression is only fully supported on \'deserialization. If you need to\nencode objects using delta compression then add the deltas manually:\n\n```js\nstr = \'\';\nfor (i = _i = 0; _i < 1000; i = ++_i) {\n  str += \'test content/test content2/test content3\\n\';\n}\n\nb1 = new Blob(str);\nb2 = new Blob(str + \'append\\n\');\nb3 = new Blob(str + \'append\\nappend2\\n\');\nb4 = new Blob(str + \'append\\nappend2\\nappend3\\n\');\n\npack = new Pack([\n  b1,\n  b2.diff(b1),\n  b3.diff(b2),\n  b4.diff(b3)\n]);\npack.serialize();\n```\n',
47 silly install resolved     readmeFilename: 'README.md',
47 silly install resolved     _id: 'git-core@0.0.4',
47 silly install resolved     dist:
47 silly install resolved      { shasum: 'ee49c4b8c67926e7c4ee13482c06c8bfa94b2261',
47 silly install resolved        tarball: 'http://registry.npmjs.org/git-core/-/git-core-0.0.4.tgz' },
47 silly install resolved     _npmVersion: '1.1.69',
47 silly install resolved     _npmUser: { name: 'tarruda', email: 'tpadilha84@gmail.com' },
47 silly install resolved     maintainers: [ [Object] ],
47 silly install resolved     directories: {},
47 silly install resolved     _shasum: 'ee49c4b8c67926e7c4ee13482c06c8bfa94b2261',
47 silly install resolved     _resolved: 'https://registry.npmjs.org/git-core/-/git-core-0.0.4.tgz',
47 silly install resolved     _from: 'git-core@*' } ]
48 info install git-core@0.0.4 into C:\Users\Luiz Fernando\Google Drive\maromba
49 info installOne git-core@0.0.4
50 verbose installOne of git-core to C:\Users\Luiz Fernando\Google Drive\maromba not in flight; installing
51 verbose lock using C:\Users\Luiz Fernando\AppData\Roaming\npm-cache\_locks\git-core-a8dc8cdc7d72847f.lock for C:\Users\Luiz Fernando\Google Drive\maromba\node_modules\git-core
52 silly install write writing git-core 0.0.4 to C:\Users\Luiz Fernando\Google Drive\maromba\node_modules\git-core
53 verbose unbuild node_modules\git-core
54 silly gentlyRm C:\Users\Luiz Fernando\Google Drive\maromba\node_modules\git-core is being purged from base C:\Users\Luiz Fernando\Google Drive\maromba
55 verbose gentlyRm don't care about contents; nuking C:\Users\Luiz Fernando\Google Drive\maromba\node_modules\git-core
56 verbose tar unpack C:\Users\Luiz Fernando\AppData\Roaming\npm-cache\git-core\0.0.4\package.tgz
57 verbose tar unpacking to C:\Users\Luiz Fernando\Google Drive\maromba\node_modules\git-core
58 silly gentlyRm C:\Users\Luiz Fernando\Google Drive\maromba\node_modules\git-core is being purged
59 verbose gentlyRm don't care about contents; nuking C:\Users\Luiz Fernando\Google Drive\maromba\node_modules\git-core
60 silly gunzTarPerm modes [ '777', '666' ]
61 silly gunzTarPerm extractEntry package.json
62 silly gunzTarPerm modified mode [ 'package.json', 420, 438 ]
63 silly gunzTarPerm extractEntry .npmignore
64 silly gunzTarPerm modified mode [ '.npmignore', 420, 438 ]
65 silly gunzTarPerm extractEntry README.md
66 silly gunzTarPerm modified mode [ 'README.md', 420, 438 ]
67 silly gunzTarPerm extractEntry binding.gyp
68 silly gunzTarPerm modified mode [ 'binding.gyp', 420, 438 ]
69 silly gunzTarPerm extractEntry src/cpp/zlib.cpp
70 silly gunzTarPerm modified mode [ 'src/cpp/zlib.cpp', 420, 438 ]
71 silly gunzTarPerm extractEntry src/js/zlib.js
72 silly gunzTarPerm modified mode [ 'src/js/zlib.js', 420, 438 ]
73 silly gunzTarPerm extractEntry src/js/pack.js
74 silly gunzTarPerm modified mode [ 'src/js/pack.js', 420, 438 ]
75 silly gunzTarPerm extractEntry src/js/common.js
76 silly gunzTarPerm modified mode [ 'src/js/common.js', 420, 438 ]
77 silly gunzTarPerm extractEntry src/js/index.js
78 silly gunzTarPerm modified mode [ 'src/js/index.js', 420, 438 ]
79 silly gunzTarPerm extractEntry src/js/delta.js
80 silly gunzTarPerm modified mode [ 'src/js/delta.js', 420, 438 ]
81 silly gunzTarPerm extractEntry src/js/blob.js
82 silly gunzTarPerm modified mode [ 'src/js/blob.js', 420, 438 ]
83 silly gunzTarPerm extractEntry src/js/tree.js
84 silly gunzTarPerm modified mode [ 'src/js/tree.js', 420, 438 ]
85 silly gunzTarPerm extractEntry src/js/commit.js
86 silly gunzTarPerm modified mode [ 'src/js/commit.js', 420, 438 ]
87 silly gunzTarPerm extractEntry src/js/tag.js
88 silly gunzTarPerm modified mode [ 'src/js/tag.js', 420, 438 ]
89 verbose write writing to C:\Users\Luiz Fernando\Google Drive\maromba\node_modules\git-core\package.json
90 info preinstall git-core@0.0.4
91 verbose readDependencies loading dependencies from C:\Users\Luiz Fernando\Google Drive\maromba\node_modules\git-core\package.json
92 verbose readDependencies loading dependencies from C:\Users\Luiz Fernando\Google Drive\maromba\node_modules\git-core\package.json
93 silly install resolved []
94 verbose about to build C:\Users\Luiz Fernando\Google Drive\maromba\node_modules\git-core
95 info build C:\Users\Luiz Fernando\Google Drive\maromba\node_modules\git-core
96 info linkStuff git-core@0.0.4
97 silly linkStuff git-core@0.0.4 has C:\Users\Luiz Fernando\Google Drive\maromba\node_modules as its parent node_modules
98 verbose linkBins git-core@0.0.4
99 verbose linkMans git-core@0.0.4
100 verbose rebuildBundles git-core@0.0.4
101 info install git-core@0.0.4
102 verbose unsafe-perm in lifecycle true
103 info git-core@0.0.4 Failed to exec install script
104 verbose unlock done using C:\Users\Luiz Fernando\AppData\Roaming\npm-cache\_locks\git-core-a8dc8cdc7d72847f.lock for C:\Users\Luiz Fernando\Google Drive\maromba\node_modules\git-core
105 verbose stack Error: git-core@0.0.4 install: `node-gyp rebuild`
105 verbose stack Exit status 1
105 verbose stack     at EventEmitter.<anonymous> (D:\Programs\node-js\node_modules\npm\lib\utils\lifecycle.js:214:16)
105 verbose stack     at emitTwo (events.js:87:13)
105 verbose stack     at EventEmitter.emit (events.js:172:7)
105 verbose stack     at ChildProcess.<anonymous> (D:\Programs\node-js\node_modules\npm\lib\utils\spawn.js:24:14)
105 verbose stack     at emitTwo (events.js:87:13)
105 verbose stack     at ChildProcess.emit (events.js:172:7)
105 verbose stack     at maybeClose (internal/child_process.js:817:16)
105 verbose stack     at Process.ChildProcess._handle.onexit (internal/child_process.js:211:5)
106 verbose pkgid git-core@0.0.4
107 verbose cwd C:\Users\Luiz Fernando\Google Drive\maromba
108 error Windows_NT 10.0.10240
109 error argv "D:\\Programs\\node-js\\node.exe" "D:\\Programs\\node-js\\node_modules\\npm\\bin\\npm-cli.js" "install" "git-core"
110 error node v4.1.1
111 error npm  v2.14.4
112 error code ELIFECYCLE
113 error git-core@0.0.4 install: `node-gyp rebuild`
113 error Exit status 1
114 error Failed at the git-core@0.0.4 install script 'node-gyp rebuild'.
114 error This is most likely a problem with the git-core package,
114 error not with npm itself.
114 error Tell the author that this fails on your system:
114 error     node-gyp rebuild
114 error You can get their info via:
114 error     npm owner ls git-core
114 error There is likely additional logging output above.
115 verbose exit [ 1, true ]
116 verbose unbuild node_modules\git-core
117 info preuninstall git-core@0.0.4
118 info uninstall git-core@0.0.4
119 verbose unbuild rmStuff git-core@0.0.4 from C:\Users\Luiz Fernando\Google Drive\maromba\node_modules
120 info postuninstall git-core@0.0.4
121 silly gentlyRm C:\Users\Luiz Fernando\Google Drive\maromba\node_modules\git-core is being purged from base C:\Users\Luiz Fernando\Google Drive\maromba
122 verbose gentlyRm don't care about contents; nuking C:\Users\Luiz Fernando\Google Drive\maromba\node_modules\git-core
123 silly vacuum-fs purging C:\Users\Luiz Fernando\Google Drive\maromba\node_modules\git-core
124 silly vacuum-fs removing C:\Users\Luiz Fernando\Google Drive\maromba\node_modules
125 silly vacuum-fs finished vacuuming up to C:\Users\Luiz Fernando\Google Drive\maromba
